topic: ~introduction()
language: enu

concept:(speed_slow) \rspd=80\ \vct=100\
concept:(normal) \rspd=100\ \vct=100\
concept:(wait) ["ok" "I will wait." "Think about it."]
concept:(yes) [yes "all right" sure "why not" ok certainly "very well" yep yea definitely amen]
concept:(no) [no nope "don't want" "no way" never "not at all"]
concept:(how) ["how are you" howdy "what's up" "how do you feel"]
concept:(happy) [ok fine great happy blessed "all right" glad "not bad"]
concept:(sad) [sad miserable bad unhappy tired]
concept:(repeat) [repeat understand]
concept:(thx) ["thank you" thanks gracias "much obliged" merci]
concept:(hello) [hello hi hey "good morning" greetings]
concept:(bye) [bye goodbye "bye bye" "tata" "see you" adios cheerio "so long" farewell "have a nice day"]


u:(~hello) ^start(animations/Stand/Gestures/Hey_1) ~hello ^wait(animations/Stand/Gestures/Hey_1)

# Tag animation.
# If User asks how the robot feels, it starts a random animation being tagged "myself",
# answers and go to the label %howAreYou
#u:(~how) ^startTag(myself) I'm fine, thank you. And you? ^gotoReactivate(howAreYou)
u:(~how) ^startTag(myself) I'm fine, thank you. And you? ^gotoReactivate(howAreYou)

# %Label.
# The robot asks how the user feels. 3 kind of answers are expected
# Expressed by concept, user can be happy, sad or ask the robot to repeat the question.
proposal: %howAreYou ^startTag(show) how are you today?
    u1:(~happy) I'm glad you are fine! $mode = 1 ^gotoReactivate(name)
    u1:(~sad) Oh, I feel sorry for you. $mode = 1 ^gotoReactivate(name)
    u1:(~repeat) I'll repeat for you. ^sameProposal

proposal: %name And is your name Alex ?
    u1:(~yes) Nice to meet you, Alex ! ^gotoReactivate(gameIntroduction)
    u2:(~no) Well then, I will let my human agent to talk to you.

proposal: %gameIntroduction Today I am going to teach you a game called nonogram. Tell me yes when you are prepared.
    u1:(~yes) Well then, let us start. ~speed_slow First I will introduce the rules of this game. Have a look at the board on the screen. The positive integers in the top of a column or left of a row stand for the lengths of black runs in the column or row respectively. Do you see those numbers now ?
        u2:(~yes) Alright, firstly, ~speed_slow each cell must be colored by black or left empty. That means, each cell only has two different status. Then, second rule is tf a row or column has k numbers: s1,s2,...,sk , it must contain k black runs. ~normal For example, 2,1 on the second row means there in total two black runs on that row. Are you following me?
            u3:(~yes) Finally, there should be at least one empty cell between two consecutive black runs, which means you will first see two continuous black cells together and one black cell. ~speed_slow Do you understand all the rules now? ~normal Should we start the game?
                u4:(~yes) Let us start, please look at the screen in front of you. ^pCall(ALMemory.insertData("robot",1))
                u4:(~no) ~wait ^stayInScope
            u3:(~no) ~wait ^stayInScope
        u2:(~no) ~wait ^stayInScope
    u1:(~no) ~wait ^stayInScope

# On any proposal if user asks to repeat, say again the same proposal.
u:(~repeat) I'll repeat for you. ^sameProposal

# Being polite, the robot always answers accordingly to thankful sentences.
u:(~thx) You're welcome

u:(e:LeftBumperPressed) My left foot bumped into something!